class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> result;
        int n = nums.size();
        unordered_map<int, int> numToIndex; // Map to store the number and its index
        
        for (int i = 0; i < n; i++) {
            int complement = target - nums[i];
            if (numToIndex.find(complement) != numToIndex.end()) {
                result.push_back(numToIndex[complement]);
                result.push_back(i);
                return result;
            }
            numToIndex[nums[i]] = i; // Store the number and its index
        }
        
        return result;
    }
};   

see leetcode 



Solution METHOD 2

