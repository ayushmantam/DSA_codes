class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n = nums.size();
        // PREFIX PRODUCT
        vector<int> preProduct(n);
        vector<int> postProduct(n);
        int pre = 1;
        int post = 1;
        for (int i = 0; i < n; i++) {
            pre *= nums[i];
            preProduct[i] = pre;

            post *= nums[n - 1 - i];
            postProduct[n - 1 - i] = post;
        }

        vector<int> result(n);                           NEETCODE CHANNEL               NEETCODE             NEETCODE
        
        // for(int i=0 ; i < n ; i++){
        //     cout<<preProduct[i]<<" ";
        // }
        // cout<<endl;
        // for(int i=0 ; i < n ; i++){
        //     cout<<postProduct[i]<<" ";
        // }

        result[0]=postProduct[1];
        result[n-1]=preProduct[n-2];
        for(int i=1 ; i < n -1 ; i++ ){
            result[i]= preProduct[i-1] * postProduct[i+1];
        }
        return result;
    }
};      NEETCODE