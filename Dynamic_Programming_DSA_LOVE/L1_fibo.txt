// DP KE QUESTIONS ME INTERVIEW ME HUMARA FLOW OF ANSWER AISA HI HONA CHAIYE 

class Solution {
public:
    int recSolve(int n){
        //base case
        if(n==0||n==1){
            return n;
        }
       
        int ans=recSolve(n-1)+recSolve(n-2);
        return ans;
    }
    // TC= O(logn)  SC=O(n)
     
     
    // Recursion + Memoisation
    int topDownSolve(int n,vector<int>dp){
        //base case
        if(n==0||n==1){
            return n;
        }

        //step3:check if ans already exists
        if(dp[n]!=-1){
            return dp[n];   //ye jo right substree wali calls hoti hai unme help karta hai 

        }
        // step2: replace ans with dp[n]
        dp[n]=topDownSolve(n-1)+topDownSolve(n-2);
        return dp[n];
    }
    // TC= O(n)  SC=O(n+n)=O(n)



    // Tabulation Method
    int BottomUpSolve(int n){
        // Step1:create dp array
        vector<int>dp(n+1,-1);

        // step2: base case
        dp[0]=0;
        if(n==0){
            return dp[0];
        }
        dp[1]=1;

        //step 3: topDown Approach me n kaise travel krra hai
        for(int i=2;i<=n;i++){
            dp[i]=dp[i-1]+dp[i-2];
        }

        return dp[n];
    }
    // TC= O(n)  SC=O(n)

    int SpaceOptSolve(int n){
        int prev2=0;
        int prev1=1;

        if(n==0)
        return prev2;
        
        if(n==1)
        return prev1;

        int curr;
        for(int i=2; i<=n ; i++){
            curr=prev1+prev2;
            prev2=prev1;
            prev1=curr;
        }
        return curr;
    }
    // TC= O(n)  SC=O(1)

    int fib(int n) {
        // return recSolve(n);

        //by DP
        //step1: create dp array  size= n-0+1=n+1
        // vector<int>dp(n+1,-1);
        // int ans=topDownSolve(n,dp);
        // return ans;

        // int ans=BottomUpSolve(n);
        // return ans;

        int ans=SpaceOptSolve(n);
        return ans;
    }
};